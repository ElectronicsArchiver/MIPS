/*
 *    Copyright 2021 ParkerTenBroeck
 *
 *    Licensed under the Apache License, Version 2.0 (the "License");
 *    you may not use this file except in compliance with the License.
 *    You may obtain a copy of the License at
 *
 *        http://www.apache.org/licenses/LICENSE-2.0
 *
 *    Unless required by applicable law or agreed to in writing, software
 *    distributed under the License is distributed on an "AS IS" BASIS,
 *    WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 *    See the License for the specific language governing permissions and
 *    limitations under the License.
 */
package org.parker.mips.gui;

import org.parker.mips.architectures.mips.MipsArchitecture;

import javax.swing.*;
import java.awt.*;
import java.awt.event.MouseEvent;
import java.awt.event.MouseListener;
import java.awt.event.MouseMotionAdapter;

public class borderTest {
    private JPanel panel1;
    private test test1;
    private UserPaneTabbedPane sdmfh;
    private JPanel rightFuck;


    public static void main(String... args) {
        Frame f = new JFrame();
        f.add(new borderTest().$$$getRootComponent$$$());
        f.pack();
        f.setVisible(true);
    }

    public borderTest() {
        $$$setupUI$$$();

        System.out.println("adsasdasdasdsad");
        //rightFuck.add(new JButton());
        rightFuck.setLayout(null);
        //rightFuck.setMinimumSize(new Dimension(100, rightFuck.getHeight()));
        rightFuck.setPreferredSize(new Dimension(100, rightFuck.getHeight()));
        //rightFuck.setSize(new Dimension(100, rightFuck.getHeight()));
        rightFuck.setForeground(Color.red);
        rightFuck.setBackground(Color.red);
        rightFuck.addMouseListener(new MouseListener() {
            @Override
            public void mouseClicked(MouseEvent e) {
                //System.err.println("click");

            }

            @Override
            public void mousePressed(MouseEvent e) {
                drag = true;
                dragLocation = e.getPoint();
                //System.err.println("drag");
            }

            @Override
            public void mouseReleased(MouseEvent e) {
                drag = false;
            }

            @Override
            public void mouseEntered(MouseEvent e) {

            }

            @Override
            public void mouseExited(MouseEvent e) {

            }
        });
        rightFuck.addMouseMotionListener(new MouseMotionAdapter() {

            boolean save = true;

            @Override
            public void mouseDragged(MouseEvent e) {
                if (drag) {
                    //System.out.println("move");
                    //if (dragLocation.getX() > rightFuck.getWidth() - 10 && dragLocation.getY() > rightFuck.getHeight() - 10) {
                        //System.err.println("in");
                    save = false;
                    SwingUtilities.invokeLater(() -> {
                        System.out.println((e.getPoint().getX() - dragLocation.getX()));
                        rightFuck.setPreferredSize(new Dimension(
                                (int) (rightFuck.getWidth() - (e.getPoint().getX() - dragLocation.getX())),
                                (int) (rightFuck.getHeight() - (e.getPoint().getY() - dragLocation.getY()))));
                        dragLocation = e.getPoint();
                        save = true;

                    });


                    //}
                    rightFuck.revalidate();
                }

            }
        });
    }

    /**
     * Method generated by IntelliJ IDEA GUI Designer
     * >>> IMPORTANT!! <<<
     * DO NOT edit this method OR call it in your code!
     *
     * @noinspection ALL
     */
    private void $$$setupUI$$$() {
        createUIComponents();
        panel1 = new JPanel();
        panel1.setLayout(new BorderLayout(0, 0));
        sdmfh = new UserPaneTabbedPane();
        panel1.add(sdmfh, BorderLayout.CENTER);
        panel1.add(test1.$$$getRootComponent$$$(), BorderLayout.WEST);
        rightFuck = new JPanel();
        rightFuck.setLayout(new BorderLayout(0, 0));
        panel1.add(rightFuck, BorderLayout.EAST);
    }

    /**
     * @noinspection ALL
     */
    public JComponent $$$getRootComponent$$$() {
        return panel1;
    }

    private boolean drag = false;
    private Point dragLocation = new Point();

    private void createUIComponents() {
        test1 = new test(new MipsArchitecture());

        //panel1 = new JPanel();

        // TODO: place custom component creation code here
    }
}
